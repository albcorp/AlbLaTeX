#
# AlbLaTeX/make/serial/Makefile
#
#     Copyright (C) 2003-2008, 2012-2013 Andrew Lincoln Burrow
#
#     This library is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This library is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public
#     License along with this library; if not, write to the Free
#     Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
#     MA 02111-1307, USA.
#
#   - Makefile to automate application of pdflatex(1), bibtex(1), and
#     makeindex(1) to a collection of LaTeX documents using detailed
#     dependency information gathered by parsing source files
#
#   - The makefile is parameterised by $(TEX_MASTERS).  The actions
#     taken are determined by searching for the commands:
#
#	  \documentclass, \usepackage, \makeindex, \makeglossary,
#	  \tableofcontents, \listoffigures, \listoftables,
#	  \listofalgorithms, \include, \input, \includegraphics, and
#	  \bibliography
#
#     The search is complicated by comments, the verbatim commands and
#     environments, and the interaction between these structures.
#
#     In practice, this places the following limitations on the LaTeX
#     source code:
#
#	+ issue each of the above commands on a separate line, apart
#	  from other instances of the same command, and apart from any
#	  of the various verbatim commands and environments; and
#
#	+ include each graphic by a filename with an extension.
#

#
# Description
#
# Set the master files for the project, all other source files will be
# located by parsing and searching along ${TEXINPUTS}, ${BIBINPUTS}, and
# ${INDEXSTYLE}

PROJECT		= AlbLaTeX-UserDocumentation
RELEASE		= draft
TEX_MASTERS	= \
	alb-algorithms.tex \
	alb-avm.tex \
	alb-float-tools.tex \
	alb-graph-theory.tex \
	alb-journal.tex \
	alb-latex.tex \
	alb-order-theory.tex \
	alb-proofs.tex \
	alb-theorems.tex \
	alb-thesis.tex

#
# Programs
#
# Programs and their options for the compilation and installation steps

KPSEWHICH	= kpsewhich DUMMY
PDFLATEX	= pdflatex -interaction=nonstopmode
BIBTEX		= bibtex
MAKEINDEX	= makeindex

TOUCH		= touch -c DUMMY

#
# ------------------------ DO NOT EDIT BELOW THIS LINE ------------------------
#

#
# Rule processing
#
# Turn off suffix rules.  Mandate the bash(1) shell

.SUFFIXES:
SHELL		= /bin/bash

#
# Default target
#
# Process all master files

.PHONY:			all
all:			$(TEX_MASTERS:%.tex=%.pdf)

#
# Dependency files
#
# The dependency file for each master or included file contains the
# following variables, one instance for each master and included file,
# where % is replaced by the basename of the file less the extension.
#
# INP_FILES_%
#   Basenames of LaTeX files inputted by the included file, or for a
#   master file, inputted by the master file and its included files.
#
# GRF_FILES_%
#   Relative filenames of graphics files inputted by the included file,
#   or for a master file, inputted by the master file and its included
#   files.
#
# PRE_AUX_FILES_%
#   Basenames of intermediate files generated by LaTeX.  For included
#   files, the filenames are generated from the included filename.  See
#   'AUX_FILES_%' below.
#
# PRE_BIB_FILES_%
#   Basenames of bibliographic databases required by BibTeX.  The
#   filenames do not include extensions.  See 'BIB_FILES_%' below.
#
# PRE_BBL_FILES_%
#   Basenames of bibliographic files generated by BibTeX.  For included
#   files, the filenames are generated from the included filename.  See
#   'BBL_FILES_%' below.
#
# The dependency file for each master file contains the following
# additional variables, one instance for each master file, where % is
# replaced by the basename of the file less the extension.
#
# CLS_NAME_%
#   Name of the LaTeX class for the document.
#
# OPT_NAMES_%
#   Names of the document options.
#
# PKG_NAMES_%
#   Names of LaTeX packages explicitly loaded by the document.
#
# INC_FILES_%
#   Basenames of LaTeX files included by the document.
#
# BIB_FILES_%
#   Basenames of bibliographic databases required by BibTex to generate
#   the files in 'BBL_FILES_%'.
#
# AUX_FILES_%
#   Basenames of files generated by LaTeX and required for convergence
#   to correct front matter.  The list is created from 'PRE_AUX_FILES_%'
#   by correction for basenames and extensions according to rules for
#   particular classes and packages.
#
# BBL_FILES_%
#   Basenames of files generated by BibTeX and required for convergence
#   to correct front matter.  The list is created from 'PRE_BBL_FILES_%'
#   by correction for basenames and extensions according to rules for
#   particular classes and packages.
#
# IDX_FILES_%
#   Basename of files generated by LaTeX and required to generate
#   indices.
#
# IND_FILES_%
#   Basename of files generated by makeindex and required for
#   convergence to final document.
#
# Finally, the dependency file for each master contains rules to
# populate the dependencies from the master and included files up to the
# final document.  These rules ensure that all intermediate files are
# correctly rebuilt in case of source file changes.

include $(TEX_MASTERS:%.tex=%.d)

#
# Standard targets
#
# See 'standards.info' for a description of the GNU makefile conventions

.PHONY:			install
install:		all installdirs
	@echo 'install: Not implemented'

.PHONY:			installdirs
installdirs:
	@echo 'installdirs: Not implemented'

.PHONY:			uninstall
uninstall:
	@echo 'uninstall: Not implemented'

.PHONY:			clean
clean:			mostlyclean
	rm -f $(TEX_MASTERS:%.tex=%.pdf)

.PHONY:			distclean
distclean:		clean

.PHONY:			mostlyclean
mostlyclean:
	rm -f $(sort \
		$(foreach i, $(TEX_MASTERS:%.tex=%), \
		    $(AUX_FILES_$(i)) \
		    $(BBL_FILES_$(i)) \
		    $(patsubst %.bbl, %.blg, $(BBL_FILES_$(i))) \
		    $(IDX_FILES_$(i)) \
		    $(IND_FILES_$(i)) \
		    $(patsubst %.gls, %.ilg, $(IND_FILES_$(i))) \
		    $(patsubst %.ind, %.ilg, $(IND_FILES_$(i)))))

.PHONY:			maintainer-clean
maintainer-clean:	distclean
	rm -f $(TEX_MASTERS:%.tex=%.d)
	rm -f $(sort \
		$(foreach i, $(TEX_MASTERS:%.tex=%), \
		    $(INC_FILES_$(i):%.tex=%.d)))

.PHONY:			dist
dist:
	@echo 'dist: Not implemented'

.PHONY:			check
check:									\
		$(TEX_MASTERS:%.tex=%.check)

#
# Dependencies rules
#
# For the master file and each included file, we construct the
# dependency files described above, in the form of a makefile with the
# extension '.d'.  The first rule generates makefiles for master files,
# the second rule generates makefiles for included files.
#
# The LaTeX source is parsed in the following steps.
#
#   + Discard \\ commands to avoid confusion recognising escapes.
#
#   + Discard \% commands to avoid confusion recognising comments.
#
#   + Discard comments.
#
#   + Discard lines containing \verb and \verb* commands.
#
#   + Discard sequences of lines spanned by 'verbatim' and 'verbatim*'
#     environments.
#
#   + For \documentclass, search the preamble to locate the command.
#     Collect the first square brace delimited argument and first curly
#     brace delimited argument by searches beginning at the line
#     containing the command.
#
#   + For \usepackage, search the preamble to locate the command.
#     Collect the first brace delimited argument by a search which
#     begins at the line containing the command.
#
#   + For \include, search the body to locate the command.  Collect the
#     first brace delimited argument by a search which begins at the
#     line containing the command.  Append '.tex' to the argument.
#
#   + For each of \makeindex and \makeglossary, search the preamble to
#     locate the command.  Record the basename of the file in which
#     command occurred replacing '.tex' by '.glo', or '.idx' as
#     appropriate.
#
#   + For each of \tableofcontents, \listoffigures, and
#     \listofalgorithms, search the body to locate the command.	 Record
#     the basename of the file in which command occurred replacing
#     '.tex' by '.toc', '.lof', '.lot', or '.loa' as appropriate.
#
#   + For \input, search the body to locate the command.  Collect the
#     first brace delimited argument  by a search which begins at the
#     line containing the command.  Append '.tex' to the argument.
#
#   + For \includegraphics, search the body to locate the command.
#     Collect the first brace delimited argument by a search which
#     begins at the line containing the command.  No extension is
#     appended to the argument.
#
#   + For \bibliography, search the body to locate the command.
#     Record the basename of the file in which command occurred.

$(TEX_MASTERS:%.tex=%.d): \
%.d:									\
		%.tex
	@echo
	@echo '# Rebuilding dependencies for master file: $<'
	sed \
	    -e 's/\\\\//g' \
	    -e 's/\\%//g' \
	    -e 's/^\([^%]*\)%.*/\1/' \
	    -e 's/^.*\\verb\>.*//' \
	    -e '/\\begin{verbatim\*\?}/,/\\end{verbatim\*\?}/ s/.*//' \
	    < $< \
	    > $(<:%.tex=%.stripped)
	sed \
	    -e '/\\begin{document}/,/\\end{document}/ d' \
	    < $(<:%.tex=%.stripped) \
	    > $(<:%.tex=%.preamble)
	sed \
	    -e '0,/\\begin{document}/ d' \
	    < $(<:%.tex=%.stripped) \
	    > $(<:%.tex=%.body)
	sed \
	    -e '/\\include\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\include\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    > $(<:%.tex=%.includes)
	echo '### ALB LATEX MAGIC' > $@
	echo '# This makefile describes '$<'.' >> $@
	echo '# It is generated and overwritten by make(1).' >> $@
	echo '# Do not edit by hand.' >> $@
	echo -n 'CLS_NAME_$(<:%.tex=%) = ' >> $@
	sed \
	    -e '/\\documentclass\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\documentclass\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.preamble) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'OPT_NAMES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e '/\\documentclass\>.*{/ s/^[^[]*\(\[\(.*\)\]\)\?.*/%\2/' \
	    -e '/\\documentclass\>/,/{/ s/^[^[]*\(\[\(.*\)\]\)\?.*/%\2/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    -e 's/,/ /g' \
	    < $(<:%.tex=%.preamble) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'PKG_NAMES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e '/\\usepackage\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\usepackage\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.preamble) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'INC_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e 's/^\(.*\)/\1.tex/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'INP_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e '/\\input\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1.tex/' \
	    -e '/\\input\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1.tex/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	sed \
	    -e 's/^\(.*\)/$$(INP_FILES_\1)/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n ' ' >> $@
	echo >> $@
	echo -n 'GRF_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e '/\\includegraphics\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\includegraphics\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	sed \
	    -e 's/^\(.*\)/$$(GRF_FILES_\1)/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n ' ' >> $@
	echo >> $@
	echo -n 'PRE_AUX_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e 's/^.*\\tableofcontents\>.*/%$(<:%.tex=%.toc)/' \
	    -e 's/^.*\\listoffigures\>.*/%$(<:%.tex=%.lof)/' \
	    -e 's/^.*\\listoftables\>.*/%$(<:%.tex=%.lot)/' \
	    -e 's/^.*\\listofalgorithms\>.*/%$(<:%.tex=%.loa)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	sed \
	    -e 's/^\(.*\)/$$(PRE_AUX_FILES_\1)/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n ' ' >> $@
	echo >> $@
	echo -n 'PRE_BIB_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e '/\\bibliography\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\bibliography\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e 's/^.*\\\>.*/%$(<:%.tex=%.bbl)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    -e 's/,/ /' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	sed \
	    -e 's/^\(.*\)/$$(PRE_BIB_FILES_\1)/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n ' ' >> $@
	echo >> $@
	echo >> $@
	echo -n 'PRE_BBL_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e 's/^.*\\bibliography\>.*/%$(<:%.tex=%.bbl)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	sed \
	    -e 's/^\(.*\)/$$(PRE_BBL_FILES_\1)/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n ' ' >> $@
	echo >> $@
	echo -n 'include ' >> $@
	sed \
	    -e 's/^\(.*\)/\1.d/' \
	    < $(<:%.tex=%.includes) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'IDX_FILES_$(<:%.tex=%) = ' >> $@
	sed \
	    -e 's/^.*\\makeglossary\>.*/%$(<:%.tex=%.glo)/' \
	    -e 's/^.*\\makeindex\>.*/%$(<:%.tex=%.idx)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.preamble) \
	    | xargs echo -n >> $@
	echo >> $@
	rm -f \
	    $(<:%.tex=%.stripped) $(<:%.tex=%.preamble) $(<:%.tex=%.body) \
	    $(<:%.tex=%.includes) 
	echo 'AUX_FILES_<MASTER> := $$(sort \
	<MASTER>.aux <MASTER>.log $$(INC_FILES_<MASTER>:%.tex=%.aux) \
	$$(if $$(filter hyperref, $$(PKG_NAMES_<MASTER>)), \
	    <MASTER>.out) \
	$$(if $$(filter beamer, $$(CLS_NAME_<MASTER>)), \
	    <MASTER>.nav <MASTER>.out <MASTER>.snm) \
	$$(patsubst %.toc, <MASTER>.toc, \
	    $$(filter %.toc, $$(PRE_AUX_FILES_<MASTER>))) \
	$$(patsubst %.lof, <MASTER>.lof, \
	    $$(filter %.lof, $$(PRE_AUX_FILES_<MASTER>))) \
	$$(patsubst %.lot, <MASTER>.lot, \
	    $$(filter %.lot, $$(PRE_AUX_FILES_<MASTER>))) \
	$$(patsubst %.loa, <MASTER>.loa, \
	    $$(filter %.loa, $$(PRE_AUX_FILES_<MASTER>))))' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo 'BIB_FILES_<MASTER> := $$(sort \
	$$(shell $(KPSEWHICH) \
	    $$(patsubst %, %.bib, $$(PRE_BIB_FILES_<MASTER>))))' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo 'BBL_FILES_<MASTER> := $$(sort \
	$$(if $$(filter chapterbib, $$(PKG_NAMES_<MASTER>)), \
	    $$(PRE_BBL_FILES_<MASTER>), \
	    $$(patsubst %.bbl, <MASTER>.bbl, \
		$$(filter %.bbl, $$(PRE_BBL_FILES_<MASTER>)))))' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo 'IND_FILES_<MASTER> := $$(sort \
	    $$(patsubst %.glo, %.gls, \
		$$(filter %.glo, $$(IDX_FILES_<MASTER>))) \
	    $$(patsubst %.idx, %.ind, \
		$$(filter %.idx, $$(IDX_FILES_<MASTER>))))' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '<MASTER>.pdf: <MASTER>.pass_2 $$(IND_FILES_<MASTER>)' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '$$(IDX_FILES_<MASTER>): <MASTER>.pass_2' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '<MASTER>.pass_2: $$(AUX_FILES_<MASTER>) $$(BBL_FILES_<MASTER>)' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '$$(BBL_FILES_<MASTER>): $$(BIB_FILES_<MASTER>)' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '$$(AUX_FILES_<MASTER>): <MASTER>.pass_1' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@
	echo '<MASTER>.pass_1: <MASTER>.tex $$(INC_FILES_<MASTER>) \
	$$(INP_FILES_<MASTER>) $$(GRF_FILES_<MASTER>) ' \
	    | sed -e 's/<MASTER>/$(<:%.tex=%)/g' >> $@

%.d:									\
		%.tex
	@echo
	@echo '#Rebuilding dependencies for included file: $<'
	sed \
	    -e 's/\\\\//g' \
	    -e 's/\\%//g' \
	    -e 's/^\([^%]*\)%.*/\1/' \
	    -e 's/^.*\\verb\>.*//' \
	    -e '/\\begin{verbatim\*\?}/,/\\end{verbatim\*\?}/ s/.*//' \
	    < $< \
	    > $(<:%.tex=%.body)
	echo '### ALB LATEX MAGIC' > $@
	echo '# This makefile describes '$<'.' >> $@
	echo '# It is generated and overwritten by make(1).' >> $@
	echo '# Do not edit by hand.' >> $@
	echo -n 'INP_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e '/\\input\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1.tex/' \
	    -e '/\\input\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1.tex/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'GRF_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e '/\\includegraphics\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\includegraphics\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'PRE_AUX_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e 's/^.*\\tableofcontents\>.*/%$(<:%.tex=%.toc)/' \
	    -e 's/^.*\\listoffigures\>.*/%$(<:%.tex=%.lof)/' \
	    -e 's/^.*\\listoftables\>.*/%$(<:%.tex=%.lot)/' \
	    -e 's/^.*\\listofalgorithms\>.*/%$(<:%.tex=%.loa)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'PRE_BIB_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e '/\\bibliography\>.*{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e '/\\bibliography\>/,/{/ s/^[^{]*{\([^}]*\)}.*/%\1/' \
	    -e 's/^.*\\\>.*/%$(<:%.tex=%.bbl)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    -e 's/,/ /' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	echo >> $@
	echo -n 'PRE_BBL_FILES_$(<:%.tex=%)=' >> $@
	sed \
	    -e 's/^.*\\bibliography\>.*/%$(<:%.tex=%.bbl)/' \
	    -e '/%/! d' \
	    -e 's/%\(.*\)/\1/' \
	    < $(<:%.tex=%.body) \
	    | xargs echo -n >> $@
	echo >> $@
	rm -f $(<:%.tex=%.body)

#
# Rules for LaTeX source in 3 passes
#
# The makefile rules manage LaTeX convergence in 3 passes as follows:
#
#   + '%.pass_1' marks a single execution of LaTeX on a master file, so
#     that all LaTeX generated files are available;
#
#   + '%.pass_2' marks the point at which both LaTeX and BibTeX have
#     executed sufficient passes so that all cross references have
#     stabilised; and
#
#   + '%.pdf' marks the point at which LaTeX, BibTeX, and makeindex have
#     executed sufficient passes so that the document is finalized.
#
# Since each pass regenerates many files, the rule in each pass touches
# affected files to reconfirm the dependency ordering between the
# passes.

#
# Document finalized to include indices

$(TEX_MASTERS:%.tex=%.pdf): \
%.pdf:
	@echo
	@echo '# Finalizing: $@: $^'
	if [ -n '$(strip $(foreach i, $(@:%.pdf=%), $(IND_FILES_$(i))))' ] ; \
	then \
	    $(PDFLATEX) $(@:%.pdf=%.tex) ; \
	fi
	if grep -q \
		-e '^LaTeX Warning: Label.*changed' \
		$(@:%.pdf=%.log) ; then \
	    $(PDFLATEX) $(@:%.pdf=%.tex) ; \
	fi
	if grep -q \
		-e '^LaTeX Warning: Label.*changed' \
		$(@:%.pdf=%.log) ; then \
	    $(PDFLATEX) $(@:%.pdf=%.tex) ; \
	fi
	$(TOUCH) $(foreach i, $(@:%.pdf=%), $(AUX_FILES_$(i)))
	$(TOUCH) $(foreach i, $(@:%.pdf=%), $(BBL_FILES_$(i)))
	$(TOUCH) $(foreach i, $(@:%.pdf=%), $(IDX_FILES_$(i)))
	$(TOUCH) $(foreach i, $(@:%.pdf=%), $(IND_FILES_$(i)))
	$(TOUCH) $@

#
# Document converged to front matter and bibliography

.INTERMEDIATE:		$(TEX_MASTERS:%.tex=%.pass_2)
%.pass_2:
	@echo
	@echo '# Converging to front matter: $@: $^'
	if grep -q \
		-e '^LaTeX Warning: \(Label\|Reference\)' \
		-e '^\(LaTeX\|Package natbib\) Warning: Citation' \
		$(@:%.pass_2=%.log) ; then \
	    $(PDFLATEX) $(@:%.pass_2=%.tex) ; \
	fi
	if grep -q \
		-e '^LaTeX Warning: \(Label\|Reference\)' \
		-e '^\(LaTeX\|Package natbib\) Warning: Citation' \
		$(@:%.pass_2=%.log) ; then \
	    $(PDFLATEX) $(@:%.pass_2=%.tex) ; \
	fi
	if grep -q \
		-e '^LaTeX Warning: There were.*\(labels\|references\)' \
		$(@:%.pass_2=%.log) ; then \
	    echo -e '\n\nError: Multiple-/un- defined labels' >&2 ; \
	    cat $(@:%.pass_2=%.log) \
		| grep \
		    -e '^LaTeX Warning: \(Label\|Reference\)' \
		    -e '^.*\(multiply \|un\)defined' \
		| sed -e 's/LaTeX Warning/Error/' >&2 ; \
	    echo -e '\n' >&2 ; \
	    exit 1 ; \
	fi
	if grep -q \
		-e '^LaTeX Warning: Label.*changed' \
		$(@:%.pass_2=%.log) ; then \
	    $(PDFLATEX) $(@:%.pass_2=%.tex) ; \
	fi
	$(TOUCH) $(foreach i, $(@:%.pass_2=%), $(AUX_FILES_$(i)))
	$(TOUCH) $(foreach i, $(@:%.pass_2=%), $(BBL_FILES_$(i)))
	$(TOUCH) $(foreach i, $(@:%.pass_2=%), $(IDX_FILES_$(i)))

#
# Document roughed to generate intermediate files

.INTERMEDIATE:		$(TEX_MASTERS:%.tex=%.pass_1)
%.pass_1:
	@echo
	@echo '# Generating intermediate files: $@: $^'
	$(PDFLATEX) $(@:%.pass_1=%)
	if grep -q \
		-e '^\(LaTeX\|Package [0-9A-Za-z_-]\+\) Error:' \
		$(@:%.pass_1=%.log) ; then \
	    echo -e \
		'\n\nError: $(@:%.pass_1=%.log): ' \
		'Unrecoverable TeX/LaTeX errors\n' >&2 ; \
	    exit 1 ; \
	fi
	$(TOUCH) $(foreach i, $(@:%.pass_1=%), $(AUX_FILES_$(i)))
	if ! grep -q \
		-e '^\(LaTeX\|Package natbib\) Warning: Citation' \
		$(@:%.pass_1=%.log) ; then \
	    $(TOUCH) $(foreach i, $(@:%.pass_1=%), $(BBL_FILES_$(i))) ; \
	fi

#
# Bibliography source

%.bbl:									\
		%.aux
	@echo
	@echo '# Generating bibliography: $@: $^'
	$(BIBTEX) $(@:%.bbl=%)
	if grep -q \
		-e '^Warning' \
		$(@:%.bbl=%.blg) ; then \
	    echo -e \
		'\n\nError: $(@:%.bbl=%.blg): ' \
		'Unrecoverable BibTeX errors\n' >&2 ; \
	    exit 1 ; \
	fi

#
# Glossary source

%.gls:									\
		%.glo
	@echo
	@echo '# Generating glossary: $@: $^'
	$(MAKEINDEX) \
		-s $(foreach i, $(@:%.gls=%), $(CLS_NAME_$(i)))-glossary.ist \
		-o $@ $<

#
# Index source

%.ind:									\
		%.idx
	@echo
	@echo '# Generating index: $@: $^'
	$(MAKEINDEX) \
		-s $(foreach i, $(@:%.ind=%), $(CLS_NAME_$(i)))-index.ist \
		-o $@ $<

#
# Makefile variable checks

.INTERMEDIATE:		$(TEX_MASTERS:%.tex=%.check)
%.check:
	@echo
	@echo '# Makefile variables for master file: $(@:%.check=%.tex)'
	@echo '$(strip CLS_NAME_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(CLS_NAME_$(i))))'
	@echo '$(strip OPT_NAMES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(OPT_NAMES_$(i))))'
	@echo '$(strip PKG_NAMES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(PKG_NAMES_$(i))))'
	@echo '$(strip INC_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(INC_FILES_$(i))))'
	@echo '$(strip INP_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(INP_FILES_$(i))))'
	@echo '$(strip GRF_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(GRF_FILES_$(i))))'
	@echo '$(strip BIB_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(BIB_FILES_$(i))))'
	@echo '$(strip AUX_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(AUX_FILES_$(i))))'
	@echo '$(strip BBL_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(BBL_FILES_$(i))))'
	@echo '$(strip IDX_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(IDX_FILES_$(i))))'
	@echo '$(strip IND_FILES_$(@:%.check=%) = \
	    $(foreach i, $(@:%.check=%), $(IND_FILES_$(i))))'
